name: Python Code Check and Deploy

on:
  push:
    branches: [main]

jobs:
  lint-and-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 mypy black
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./app --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 ./app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check formatting with black
        run: |
          black --check ./app

      - name: Type check with mypy
        run: |
          mypy --ignore-missing-imports ./app

      - name: Verify application starts
        run: |
          cd app
          # Start application in background and check if it initializes correctly
          python -c "import main; app = main.app" || exit 1

  build-and-deploy:
    needs: lint-and-check
    if: github.event_name == 'push' && (github.ref == 'refs/heads/prod')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: rohiitq
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            rohiitq/portfolio:latest 
            rohiitq/portfolio:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull rohiitq/portfolio:latest
            docker stop portfolio || true
            docker rm portfolio || true
            docker run -d --name portfolio -p 8000:8080 \
              --env TELEGRAM_BOT_TOKEN=${{secrets.TELEGRAM_BOT_TOKEN}} \
              --env TELEGRAM_CHAT_ID=${{secrets.TELEGRAM_CHAT_ID}} \
              --env WAKATIME_API_KEY=${{secrets.WAKATIME_API_KEY}} \
              rohiitq/portfolio:latest
